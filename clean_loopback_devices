#!/bin/sh
# Copyright (c) 2010 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# Force cleans loopback devices from within your chroot environment.  This
# script is to help mitigate losing loopback devices on build_images
# failures.  This script only affects mountpoints and loopback devices
# that were created within this chroot.

SCRIPT_ROOT=$(dirname $(readlink -f "$0"))
. "${SCRIPT_ROOT}/common.sh" || exit 1

# Script must be run inside the chroot.
assert_inside_chroot

DEFINE_string output_root "$DEFAULT_BUILD_ROOT/images" \
  "Directory in which to place image result directories (named by version)"
DEFINE_string board "$DEFAULT_BOARD" \
  "The board to build an image for."

# Parse command line.
FLAGS "$@" || exit 1
eval set -- "${FLAGS_ARGV}"

if [[ -z "${FLAGS_board}" ]]; then
  error "--board is required."
  exit 1
fi

OUTPUT_DIR="${FLAGS_output_root}/${FLAGS_board}"

echo 'This will unmount all directories matching /tmp/esp.*'
echo "and any directory under $OUTPUT_DIR"
read -p "Are you sure (y/N)? " SURE
SURE="${SURE:0:1}" # Get just the first character
if [ "${SURE}" != "y" ]; then
  echo "Ok, better safe than sorry."
  exit 1
fi

safe_umount "$OUTPUT_DIR"/*/* 2> /dev/null
safe_umount /tmp/esp.* 2> /dev/null
sudo losetup -d /dev/loop* 2> /dev/null
